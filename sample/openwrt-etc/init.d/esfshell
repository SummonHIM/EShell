#!/bin/sh /etc/rc.common
NAME=EsurfingShell
DESCRIPTION="EsurfingShell Daemon."
USE_PROCD=1
START=99

config_esfshell_start() {
    config_get_bool enabled $1 enabled 0
    config_get username $1 username
    config_get password $1 password
    [ "$enabled" = "1" ] || { return 1; }
    [ -n "$username" ] || { return 1; }
    [ -n "$password" ] || { return 1; }
    config_get interface $1 interface
    config_get_bool verbose $1 verbose 0
    if [ "$verbose" = 1 ]; then
        verbose="true"
    elif [ "$verbose" = 0 ]; then
        verbose="false"
    fi
    config_get env $1 env

    if [ "$(echo "$interface" | cut -c1)" = "@" ]; then
        device=$(uci get "network.$(echo "$interface" | cut -c2-).device")
        ifalias=$(echo "$interface" | cut -c2-)
    else
        device=$interface
        ifalias=""
    fi

    procd_open_instance "esfshell_${1}"
    procd_set_param respawn
    procd_set_param env _ES_ACC_USERNAME="$username" _ES_ACC_PASSWD="$password" _ES_GLOBAL_DEVICE="$device" _ES_OPENWRT_DEVICE_ALIAS="$ifalias" _ES_HOMEPATH="/etc/esfshell/$interface" _ES_VERBOSE="$verbose" $env
    procd_set_param command /usr/bin/esfshell -D
    procd_set_param stdout 1
    procd_close_instance
}

config_esfshell_stop() {
    config_get_bool enabled $1 enabled 0
    config_get username $1 username
    config_get password $1 password
    [ "$enabled" = "1" ] || { return 1; }
    [ -n "$username" ] || { return 1; }
    [ -n "$password" ] || { return 1; }
    config_get interface $1 interface
    config_get_bool verbose $1 verbose 0
    if [ "$verbose" = 1 ]; then
        verbose="true"
    elif [ "$verbose" = 0 ]; then
        verbose="false"
    fi
    config_get env $1 env

    if [ "$(echo "$interface" | cut -c1)" = "@" ]; then
        device=$(uci get "network.$(echo "$interface" | cut -c2-).device")
        ifalias=$(echo "$interface" | cut -c2-)
    else
        device=$interface
        ifalias=""
    fi

    export _ES_ACC_USERNAME="$username"
    export _ES_ACC_PASSWD="$password"
    export _ES_GLOBAL_DEVICE="$device"
    export _ES_OPENWRT_DEVICE_ALIAS="$ifalias"
    export _ES_HOMEPATH="/etc/esfshell/$interface"
    export _ES_FORCE=true
    export _ES_VERBOSE="$verbose"
    for ex_env in $env; do
        export $ex_env
    done

    /usr/bin/esfshell -O
}

start_service() {
    config_load esfshell
    config_foreach config_esfshell_start
}

service_stopped() {
    config_load esfshell
    config_foreach config_esfshell_stop
}

service_triggers() {
    procd_add_reload_trigger "esfshell"
}
